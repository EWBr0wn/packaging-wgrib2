name: Docker Image CI

on:
  push:
    branches: [ "main" ]
    paths-ignore:
    - .github/workflows/docker-image.yml
  pull_request:
    branches:
      - main
  pull_request_target:
    branches:
      - main
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-foundation:
    runs-on: ubuntu-latest
    if: ${{ github.ref_name == 'main' }}
            
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Prepare foundation image in Docker
      run: |
        make 3rd-party/cmake.tgz
        docker build --target foundation -t foundation:$(date +"%s") .
    
    ## Gleaned from https://github.com/marketplace/actions/docker-layer-caching2
    # In this step, this action saves a list of existing images,
    # the cache is created without them in the post run.
    # It also restores the cache if it exists.
    - name: Docker layer caching and restore
      if: ${{ vars.USE_CACHE == 'true' }}
      uses: jpribyl/action-docker-layer-caching@v0.1.1
      # Ignore the failure of a step and avoid terminating the job.
      continue-on-error: true
      
  build-wgrib2:
    runs-on: ubuntu-latest
    needs: build-foundation
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Build the lambda-wgrib2 Docker image
      run: make lambda-wgrib2

  build-pywgrib2:
    runs-on: ubuntu-latest
    needs: build-foundation
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Build the lambda-pywgrib2 Docker image
      run: make lambda-pywgrib2
