name: New buildx Docker Image CI

on:
  push:
    branches:
        - main
        - refactor-docker-build  
    paths-ignore:
    - .github/workflows/*.yml
  pull_request:
    branches:
      - main
  pull_request_target:
    branches:
      - main
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
    foundation:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Setup Docker Buildx
              id: buildx
              uses: docker/setup-buildx-action@v2.7.0

            - name: Cache Docker layers
              id: cache-foundation
              uses: actions/cache@v1.2.1
              with:
                path: |
                  /tmp/.buildx-cache
                  ./3rd-party/cmake.tgz
                  cmake-*
                # Key is named differently to avoid collision
                key: ${{ runner.os }}-al2-buildx-${{ github.job }}
                restore-keys: |
                  ${{ runner.os }}-al2-buildx
                  
            - name: debug
              if: steps.cache-foundation.outputs.cache-hit != 'true'
              run: |
                ls -lh
                df -h
                
            - name: Download cmake
              if: steps.cache-foundation.outputs.cache-hit != 'true'
              run: |
                make 3rd-party/cmake.tgz

            - name: Build foundation image
              uses: docker/build-push-action@v4.1.1
              with:
                context: .
                builder: ${{ steps.buildx.outputs.name }}
                file: Dockerfile
                # Set the desired build target here
                target: foundation
                push: false
                tags: ${{ steps.prep.outputs.tagged_image }}
                cache-from: type=local,src=/tmp/.buildx-cache
                # Note the mode=max here
                # More: https://github.com/moby/buildkit#--export-cache-options
                # And: https://github.com/docker/buildx#--cache-tonametypetypekeyvalue
                cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

            - name: Move cache
              run: |
                rm -rf /tmp/.buildx-cache
                mv -v /tmp/.buildx-cache-new /tmp/.buildx-cache

    lambda-base:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Setup Docker Buildx
              id: buildx
              uses: docker/setup-buildx-action@v2.7.0

            - name: Cache Docker layers
              id: cache-lambda-base
              uses: actions/cache@v1.2.1
              with:
                path: |
                  /tmp/.buildx-cache
                # Key is named differently to avoid collision
                key: ${{ runner.os }}-al2-buildx-${{ github.job }}
                restore-keys: |
                  ${{ runner.os }}-al2-buildx

            - name: Build foundation image
              uses: docker/build-push-action@v4.1.1
              with:
                context: .
                builder: ${{ steps.buildx.outputs.name }}
                file: Dockerfile
                # Set the desired build target here
                target: lambda-base
                push: false
                tags: ${{ steps.prep.outputs.tagged_image }}
                cache-from: type=local,src=/tmp/.buildx-cache
                # Note the mode=max here
                # More: https://github.com/moby/buildkit#--export-cache-options
                # And: https://github.com/docker/buildx#--cache-tonametypetypekeyvalue
                cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

            - name: Move cache
              run: |
                rm -rf /tmp/.buildx-cache
                mv -v /tmp/.buildx-cache-new /tmp/.buildx-cache

    builder:
        runs-on: ubuntu-latest
        needs: 
            - foundation
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Setup Docker Buildx
              id: buildx
              uses: docker/setup-buildx-action@v2.7.0

            - name: Cache Docker layers
              id: cache-builder
              uses: actions/cache@v1.2.1
              with:
                path: |
                  /tmp/.buildx-cache
                  3rd-party/wgrib2.tgz
                # Key is named differently to avoid collision
                key: ${{ runner.os }}-al2-buildx-${{ github.job }}
                restore-keys: |
                  ${{ runner.os }}-al2-buildx
          
            - name: Download cmake
              if: steps.cache-builder.outputs.cache-hit != 'true'
              run: |
                make 3rd-party/wgrib2.tgz

            - name: Build foundation image
              uses: docker/build-push-action@v4.1.1
              with:
                context: .
                builder: ${{ steps.buildx.outputs.name }}
                file: Dockerfile
                # Set the desired build target here
                target: builder
                push: false
                tags: ${{ steps.prep.outputs.tagged_image }}
                cache-from: type=local,src=/tmp/.buildx-cache
                # Note the mode=max here
                # More: https://github.com/moby/buildkit#--export-cache-options
                # And: https://github.com/docker/buildx#--cache-tonametypetypekeyvalue
                cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

            - name: Move cache
              run: |
                rm -rf /tmp/.buildx-cache
                mv -v /tmp/.buildx-cache-new /tmp/.buildx-cache

    lambda-wgrib2:
        runs-on: ubuntu-latest
        needs:
            - lambda-base
            - builder
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Setup Docker Buildx
              id: buildx
              uses: docker/setup-buildx-action@v2.7.0

            - name: Cache Docker layers
              uses: actions/cache@v1.2.1
              with:
                path: |
                  /tmp/.buildx-cache
                # Key is named differently to avoid collision
                key: ${{ runner.os }}-al2-buildx-${{ github.sha }}
                restore-keys: |
                  ${{ runner.os }}-al2-buildx

            - name: Build foundation image
              uses: docker/build-push-action@v4.1.1
              with:
                context: .
                builder: ${{ steps.buildx.outputs.name }}
                file: Dockerfile
                # Set the desired build target here
                target: lambda-wgrib2
                push: false
                tags: ${{ steps.prep.outputs.tagged_image }}
                cache-from: type=local,src=/tmp/.buildx-cache
                # Note the mode=max here
                # More: https://github.com/moby/buildkit#--export-cache-options
                # And: https://github.com/docker/buildx#--cache-tonametypetypekeyvalue
                cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

            - name: Move cache
              run: |
                rm -rf /tmp/.buildx-cache
                mv -v /tmp/.buildx-cache-new /tmp/.buildx-cache
